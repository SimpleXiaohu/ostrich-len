(set-logic QF_S)
(set-logic QF_S)

;----------------
; trim
; -----------------
; http://php.net/manual/en/function.trim.php
; Strip whitespace from the beginning and end of a string
;    " "    (ASCII 32 (0x20)), an ordinary space.
;    "\t"   (ASCII 9  (0x09)), a tab.
;    "\n"   (ASCII 10 (0x0A)), a new line (line feed).
;    "\r"   (ASCII 13 (0x0D)), a carriage return.
;    "\0"   (ASCII 0  (0x00)), the NUL-byte.
;    "\x0B" (ASCII 11 (0x0B)), a vertical tab.


(define-funs-rec ((trim  ((x String) (y String)) Bool)
                  (tr1  ((x String) (y String)) Bool)
                  (tr2  ((x String) (y String)) Bool)
                  (tr3  ((x String) (y String)) Bool)) (

                  ; definition of trim
                  (or (and (= x "") (= y ""))
                      (and (= (seq-head x) (_ bv32 8)) ; ' '
                           (trim (seq-tail x) y))
                      (and (= (seq-head x) (_ bv09 8)) ; '\t'
                           (trim (seq-tail x) y))
                      (and (= (seq-head x) (_ bv10 8)) ; '\n'
                           (trim (seq-tail x) y))
                      (and (= (seq-head x) (_ bv13  8)) ; '\r'
                           (trim (seq-tail x) y))
                      (and (= (seq-head x) (_ bv0   8)) ; '\x00'
                           (trim (seq-tail x) y))
                      (and (= (seq-head x) (_ bv11  8)) ; '\x0B'
                           (trim (seq-tail x) y))
					  (and (= (seq-head x) (seq-head y))            ; x <=> y
                           (and (not (= (seq-head x) (_ bv32  8)))  ; '\''
                                (not (= (seq-head x) (_ bv09  8)))  ; '"'
                                (not (= (seq-head x) (_ bv10  8)))  ; '\'
                                (not (= (seq-head x) (_ bv13  8)))  ; '\'
                                (not (= (seq-head x) (_ bv11  8)))  ; '\'
                                (not (= (seq-head x) (_ bv0   8)))) ; '\x00'
                           (tr1 (seq-tail x) (seq-tail y))))

                  ; definition of tr1
                  (or (and (= x "") (= y ""))
                      (and (= (seq-head x) (_ bv32 8)) ; ' '
                           (= (seq-head y) (_ bv32 8)) ; ' '
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv09 8)) ; '\t'
                      	   (= (seq-head y) (_ bv09 8)) ; '\t'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv10 8)) ; '\n'
                           (= (seq-head y) (_ bv10 8)) ; '\n'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv13 8)) ; '\r'
                           (= (seq-head y) (_ bv13 8)) ; '\r'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv0  8)) ; '\x00'
                           (= (seq-head y) (_ bv0  8)) ; '\x00'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv11 8)) ; '\x0B'
                           (= (seq-head y) (_ bv11 8)) ; '\x0B'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv32 8)) ; ' '
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv09 8)) ; '\t'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv10 8)) ; '\n'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv13  8)) ; '\r'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv0   8)) ; '\x00'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv11  8)) ; '\x0B'
                           (tr3 (seq-tail x) y))
					  (and (= (seq-head x) (seq-head y))            ; x <=> y
                           (and (not (= (seq-head x) (_ bv32  8)))  ; '\''
                                (not (= (seq-head x) (_ bv09  8)))  ; '"'
                                (not (= (seq-head x) (_ bv10  8)))  ; '\'
                                (not (= (seq-head x) (_ bv13  8)))  ; '\'
                                (not (= (seq-head x) (_ bv11  8)))  ; '\'
                                (not (= (seq-head x) (_ bv0   8)))) ; '\x00'
                           (tr1 (seq-tail x) (seq-tail y))))

                  ; definition of tr2
                  (or (and (= (seq-head x) (_ bv32 8)) ; ' '
                           (= (seq-head y) (_ bv32 8)) ; ' '
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv09 8)) ; '\t'
                      	   (= (seq-head y) (_ bv09 8)) ; '\t'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv10 8)) ; '\n'
                           (= (seq-head y) (_ bv10 8)) ; '\n'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv13 8)) ; '\r'
                           (= (seq-head y) (_ bv13 8)) ; '\r'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv0  8)) ; '\x00'
                           (= (seq-head y) (_ bv0  8)) ; '\x00'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv11 8)) ; '\x0B'
                           (= (seq-head y) (_ bv11 8)) ; '\x0B'
                           (tr2 (seq-tail x) (seq-tail y)))
					  (and (= (seq-head x) (seq-head y))            ; x <=> y
                           (and (not (= (seq-head x) (_ bv32  8)))  ; '\''
                                (not (= (seq-head x) (_ bv09  8)))  ; '"'
                                (not (= (seq-head x) (_ bv10  8)))  ; '\'
                                (not (= (seq-head x) (_ bv13  8)))  ; '\'
                                (not (= (seq-head x) (_ bv11  8)))  ; '\'
                                (not (= (seq-head x) (_ bv0   8)))) ; '\x00'
                           (tr1 (seq-tail x) (seq-tail y))))

                  ; definition of tr2
                  (or (and (= x "") (= y ""))
                      (and (= (seq-head x) (_ bv32 8)) ; ' '
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv09 8)) ; '\t'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv10 8)) ; '\n'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv13  8)) ; '\r'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv0   8)) ; '\x00'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv11  8)) ; '\x0B'
                           (tr3 (seq-tail x) y)))
                  )
)

; ----------------
; htmlEscape
; -----------------
; https://github.com/google/closure-library/blob/master/closure/goog/string/string.js#L587
; "&"  = &amp;
; "<"  = &lt;
; ">"  = &gt;
; """  = &quot;
; "'"  = &#39;
; "e"  = &#101; ???
; \x00 = &#0;

(define-funs-rec ((htmlEscape  ((x String) (y String)) Bool)
                  (he1  ((x String) (y String)) Bool)
                  (he2  ((x String) (y String)) Bool)
                  (he3  ((x String) (y String)) Bool)
                  (he4  ((x String) (y String)) Bool)
                  (he5  ((x String) (y String)) Bool)
                  (he6  ((x String) (y String)) Bool)
                  (he7  ((x String) (y String)) Bool)
                  (he8  ((x String) (y String)) Bool)
                  (he9  ((x String) (y String)) Bool)
                  (he10 ((x String) (y String)) Bool)
                  (he11 ((x String) (y String)) Bool)
                  (he12 ((x String) (y String)) Bool)
                  (he13 ((x String) (y String)) Bool)
                  (he14 ((x String) (y String)) Bool)
                  (he15 ((x String) (y String)) Bool)) (

                  ; definition of htmlEscape
                  (or (and (= x "") (= y ""))
                      (and (= (seq-head x) (_ bv38 8)) ; '&'
                           (= (seq-head y) (_ bv38 8)) ; '&'
                           (he1 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv60 8)) ; '<'
                           (= (seq-head y) (_ bv38 8)) ; '&'
                           (he2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv62 8)) ; '>'
                           (= (seq-head y) (_ bv38 8)) ; '&'
                           (he3 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv34 8)) ; '\"'
                           (= (seq-head y) (_ bv38 8)) ; '&'
                           (he4 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head y) (_ bv38 8))        ; '&'
                           (he5 x (seq-tail y)))
					  (and (= (seq-head x) (seq-head y))           ; x <=> y
                           (and (not (= (seq-head x) (_ bv39  8)))  ; '\''
                                (not (= (seq-head x) (_ bv38  8)))  ; '&'
                                (not (= (seq-head x) (_ bv60  8)))  ; '<'
                                (not (= (seq-head x) (_ bv62  8)))  ; '>'
                                (not (= (seq-head x) (_ bv34  8)))  ; '\"'
                                (not (= (seq-head x) (_ bv0   8)))) ; '\x00'
                                ;(not (= (seq-head x) (_ bv101 8)))) ; 'e'
                           (htmlEscape (seq-tail x) (seq-tail y))))

                  ; definition of he1
                  (or (and (= (seq-head y) (_ bv97 8))  ; 'a'
                           (he6 x (seq-tail y))))

                  ; definition of he2
                  (or (and (= (seq-head y) (_ bv108 8)) ; 'l'
                           (he13 x (seq-tail y))))

                  ; definition of he3
                  (or (and (= (seq-head y) (_ bv103 8)) ; 'g'
                           (he13 x (seq-tail y))))

                  ; definition of he4
                  (or (and (= (seq-head y) (_ bv113 8)) ; 'q'
                           (he7 x (seq-tail y))))

                  ; definition of he5
                  (or (and (= (seq-head y) (_ bv35 8))  ; '#'
                           (he8 x (seq-tail y))))

                  ; definition of he6
                  (or (and (= (seq-head y) (_ bv109 8)) ; 'm'
                           (he9 x (seq-tail y))))

                  ; definition of he7
                  (or (and (= (seq-head y) (_ bv117 8)) ; 'u'
                           (he10 x (seq-tail y))))

                  ; definition of he8
                  (or (and (= (seq-head x) (_ bv39  8))      ; '\''
                           (= (seq-head y) (_ bv51  8))      ; '3'
                           (he11 (seq-tail x) (seq-tail y)))
                      ;(and (= (seq-head x) (_ bv101 8))      ; 'e'
                      ;     (= (seq-head y) (_ bv49  8))      ; '1'
                      ;     (he12 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv0   8))      ; '\x00'
                           (= (seq-head y) (_ bv48  8))      ; '0'
                           (he15 (seq-tail x) (seq-tail y))))

                  ; definition of he9
                  (or (and (= (seq-head y) (_ bv112 8)) ; 'p'
                           (he15 x (seq-tail y))))

                  ; definition of he10
                  (or (and (= (seq-head y) (_ bv111 8)) ; 'o'
                           (he13 x (seq-tail y))))

                  ; definition of he11
                  (or (and (= (seq-head y) (_ bv57 8))  ; '9'
                           (he15 x (seq-tail y))))

                  ; definition of he12
                  (or (and (= (seq-head y) (_ bv48 8))  ; '0'
                           (he14 x (seq-tail y))))

                  ; definition of he13
                  (or (and (= (seq-head y) (_ bv116 8)) ; 't'
                           (he15 x (seq-tail y))))

                  ; definition of he14
                  (or (and (= (seq-head y) (_ bv49 8))  ; '1'
                           (he15 x (seq-tail y))))

                  ; definition of he15
                  (or (and (= (seq-head y) (_ bv59 8))  ; ';'
                           (htmlEscape x (seq-tail y))))
                  )
)

(declare-fun x   () String)
(declare-fun z   () String)
(declare-fun u   () String)
(declare-fun y   () String)
(declare-fun w   () String)
(declare-fun ui   () String)
(declare-fun wi   () String)
(declare-fun i   () Int)
(assert (= ui (str.at u i)))
(assert (= wi (str.at w i)))
(assert (trim u y))
(assert (htmlEscape y w))
(assert (or (not (= (str.len u) (str.len w))) (or (or (or (or (or (or false (and (str.in.re ui (str.to.re "\x00")) (not (str.in.re wi (str.to.re "\x00"))))) (and (str.in.re ui (str.to.re "\x20")) (not (str.in.re wi (str.to.re "\x20"))))) (and (str.in.re ui (str.to.re "\x09")) (not (str.in.re wi (str.to.re "\x09"))))) (and (str.in.re ui (str.to.re "\x0A")) (not (str.in.re wi (str.to.re "\x0A"))))) (and (str.in.re ui (str.to.re "\x0B")) (not (str.in.re wi (str.to.re "\x0B"))))) (and (str.in.re ui (str.to.re "\x0D")) (not (str.in.re wi (str.to.re "\x0D")))))))
(check-sat)(get-model)