(set-logic QF_S)
;----------------
; addslashes
; -----------------
; http://php.net/manual/en/function.addslashes.php
; "\"    = 92;
; """    = 34;
; "'"    = 39;
; "\x00" = 0;

(define-funs-rec ((addslashes  ((x String) (y String)) Bool)
                  (as1  ((x String) (y String)) Bool)
                  (as2  ((x String) (y String)) Bool)
                  (as3  ((x String) (y String)) Bool)
                  (as4  ((x String) (y String)) Bool)) (

                  ; definition of addslashes
                  (or (and (= x "") (= y ""))
                      (and (= (seq-head x) (_ bv92 8)) ; '\'
                           (= (seq-head y) (_ bv92 8)) ; '\'
                           (as1 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv34 8)) ; '"'
                           (= (seq-head y) (_ bv92 8)) ; '\'
                           (as2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv39 8)) ; '\''
                           (= (seq-head y) (_ bv92 8)) ; '\'
                           (as3 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv0  8)) ; '\x00'
                           (= (seq-head y) (_ bv92 8)) ; '\'
                           (as4 (seq-tail x) (seq-tail y)))
            (and (= (seq-head x) (seq-head y))            ; x <=> y
                           (and (not (= (seq-head x) (_ bv39  8)))  ; '\''
                                (not (= (seq-head x) (_ bv34  8)))  ; '"'
                                (not (= (seq-head x) (_ bv92  8)))  ; '\'
                                (not (= (seq-head x) (_ bv0   8)))) ; '\x00'
                           (addslashes (seq-tail x) (seq-tail y))))

                  ; definition of as1
                  (and (= (seq-head y) (_ bv92 8))  ; '\'
                       (addslashes x (seq-tail y)))

                  ; definition of as2
                  (and (= (seq-head y) (_ bv34 8)) ; '"'
                       (addslashes x (seq-tail y)))

                  ; definition of as3
                  (and (= (seq-head y) (_ bv39 8)) ; '\''
                       (addslashes x (seq-tail y)))

                  ; definition of as4
                  (and (= (seq-head y) (_ bv0  8)) ; '\x00'
                       (addslashes x (seq-tail y)))

                  )
)
(set-logic QF_S)

;----------------
; trim
; -----------------
; http://php.net/manual/en/function.trim.php
; Strip whitespace from the beginning and end of a string
;    " "    (ASCII 32 (0x20)), an ordinary space.
;    "\t"   (ASCII 9  (0x09)), a tab.
;    "\n"   (ASCII 10 (0x0A)), a new line (line feed).
;    "\r"   (ASCII 13 (0x0D)), a carriage return.
;    "\0"   (ASCII 0  (0x00)), the NUL-byte.
;    "\x0B" (ASCII 11 (0x0B)), a vertical tab.


(define-funs-rec ((trim  ((x String) (y String)) Bool)
                  (tr1  ((x String) (y String)) Bool)
                  (tr2  ((x String) (y String)) Bool)
                  (tr3  ((x String) (y String)) Bool)) (

                  ; definition of trim
                  (or (and (= x "") (= y ""))
                      (and (= (seq-head x) (_ bv32 8)) ; ' '
                           (trim (seq-tail x) y))
                      (and (= (seq-head x) (_ bv09 8)) ; '\t'
                           (trim (seq-tail x) y))
                      (and (= (seq-head x) (_ bv10 8)) ; '\n'
                           (trim (seq-tail x) y))
                      (and (= (seq-head x) (_ bv13  8)) ; '\r'
                           (trim (seq-tail x) y))
                      (and (= (seq-head x) (_ bv0   8)) ; '\x00'
                           (trim (seq-tail x) y))
                      (and (= (seq-head x) (_ bv11  8)) ; '\x0B'
                           (trim (seq-tail x) y))
					  (and (= (seq-head x) (seq-head y))            ; x <=> y
                           (and (not (= (seq-head x) (_ bv32  8)))  ; '\''
                                (not (= (seq-head x) (_ bv09  8)))  ; '"'
                                (not (= (seq-head x) (_ bv10  8)))  ; '\'
                                (not (= (seq-head x) (_ bv13  8)))  ; '\'
                                (not (= (seq-head x) (_ bv11  8)))  ; '\'
                                (not (= (seq-head x) (_ bv0   8)))) ; '\x00'
                           (tr1 (seq-tail x) (seq-tail y))))

                  ; definition of tr1
                  (or (and (= x "") (= y ""))
                      (and (= (seq-head x) (_ bv32 8)) ; ' '
                           (= (seq-head y) (_ bv32 8)) ; ' '
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv09 8)) ; '\t'
                      	   (= (seq-head y) (_ bv09 8)) ; '\t'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv10 8)) ; '\n'
                           (= (seq-head y) (_ bv10 8)) ; '\n'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv13 8)) ; '\r'
                           (= (seq-head y) (_ bv13 8)) ; '\r'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv0  8)) ; '\x00'
                           (= (seq-head y) (_ bv0  8)) ; '\x00'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv11 8)) ; '\x0B'
                           (= (seq-head y) (_ bv11 8)) ; '\x0B'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv32 8)) ; ' '
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv09 8)) ; '\t'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv10 8)) ; '\n'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv13  8)) ; '\r'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv0   8)) ; '\x00'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv11  8)) ; '\x0B'
                           (tr3 (seq-tail x) y))
					  (and (= (seq-head x) (seq-head y))            ; x <=> y
                           (and (not (= (seq-head x) (_ bv32  8)))  ; '\''
                                (not (= (seq-head x) (_ bv09  8)))  ; '"'
                                (not (= (seq-head x) (_ bv10  8)))  ; '\'
                                (not (= (seq-head x) (_ bv13  8)))  ; '\'
                                (not (= (seq-head x) (_ bv11  8)))  ; '\'
                                (not (= (seq-head x) (_ bv0   8)))) ; '\x00'
                           (tr1 (seq-tail x) (seq-tail y))))

                  ; definition of tr2
                  (or (and (= (seq-head x) (_ bv32 8)) ; ' '
                           (= (seq-head y) (_ bv32 8)) ; ' '
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv09 8)) ; '\t'
                      	   (= (seq-head y) (_ bv09 8)) ; '\t'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv10 8)) ; '\n'
                           (= (seq-head y) (_ bv10 8)) ; '\n'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv13 8)) ; '\r'
                           (= (seq-head y) (_ bv13 8)) ; '\r'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv0  8)) ; '\x00'
                           (= (seq-head y) (_ bv0  8)) ; '\x00'
                           (tr2 (seq-tail x) (seq-tail y)))
                      (and (= (seq-head x) (_ bv11 8)) ; '\x0B'
                           (= (seq-head y) (_ bv11 8)) ; '\x0B'
                           (tr2 (seq-tail x) (seq-tail y)))
					  (and (= (seq-head x) (seq-head y))            ; x <=> y
                           (and (not (= (seq-head x) (_ bv32  8)))  ; '\''
                                (not (= (seq-head x) (_ bv09  8)))  ; '"'
                                (not (= (seq-head x) (_ bv10  8)))  ; '\'
                                (not (= (seq-head x) (_ bv13  8)))  ; '\'
                                (not (= (seq-head x) (_ bv11  8)))  ; '\'
                                (not (= (seq-head x) (_ bv0   8)))) ; '\x00'
                           (tr1 (seq-tail x) (seq-tail y))))

                  ; definition of tr2
                  (or (and (= x "") (= y ""))
                      (and (= (seq-head x) (_ bv32 8)) ; ' '
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv09 8)) ; '\t'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv10 8)) ; '\n'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv13  8)) ; '\r'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv0   8)) ; '\x00'
                           (tr3 (seq-tail x) y))
                      (and (= (seq-head x) (_ bv11  8)) ; '\x0B'
                           (tr3 (seq-tail x) y)))
                  )
)

(declare-fun x   () String)
(declare-fun z   () String)
(declare-fun u   () String)
(declare-fun y   () String)
(declare-fun w   () String)
(declare-fun ui   () String)
(declare-fun wi   () String)
(declare-fun i   () Int)
(assert (= ui (str.at u i)))
(assert (= wi (str.at w i)))
(assert (addslashes x y))
(assert (trim y u))
(assert (addslashes x z))
(assert (trim z w))
(assert (or (not (= (str.len u) (str.len w))) (or (or (or (or false (and (str.in.re ui (str.to.re "\x00")) (not (str.in.re wi (str.to.re "\x00"))))) (and (str.in.re ui (str.to.re "\x22")) (not (str.in.re wi (str.to.re "\x22"))))) (and (str.in.re ui (str.to.re "\x5C")) (not (str.in.re wi (str.to.re "\x5C"))))) (and (str.in.re ui (str.to.re "\x27")) (not (str.in.re wi (str.to.re "\x27")))))))
(check-sat)(get-model)